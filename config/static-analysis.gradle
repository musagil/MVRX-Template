apply plugin: 'com.novoda.static-analysis'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'io.gitlab.arturbosch.detekt'

staticAnalysis {
    penalty failOnErrors

    lintOptions {
        lintConfig configFile('quality/lint/lint.xml')
        checkAllWarnings true
        checkReleaseBuilds false // We run lint on every commit. Release does not need to run again.
        checkTestSources false // Speeds up. Also used to detect resources used only in tests.
        checkDependencies false

        includeVariants { isEnabled(it) }
    }
}

// afterEvaluate is needed only for ktlint and detekt. More info: https://github.com/novoda/gradle-static-analysis-plugin/issues/129
project.afterEvaluate {
    staticAnalysis {
        ktlint {
            outputToConsole = false
            reporters {
                reporter 'plain'
                reporter 'checkstyle'
            }
            includeVariants { isEnabled(it) }
        }

        detekt {
            config = files(configFile('quality/detekt/detekt-config.yml'))
            failFast = false
        }
    }
}

private boolean isEnabled(variant) {
    def type = project.properties['checkType'] ?: 'debug'
    return variant.name in ["extranet${type.capitalize()}", 'debug']*.toString()
}
